/*jslint evil:true */
/**
 * Dynamic thread loader
 *
 * 
 * 
 * 
 * 
 * 
*/

// 
var DISQUS;
if (!DISQUS || typeof DISQUS == 'function') {
    throw "DISQUS object is not initialized";
}
// 

// json_data and default_json django template variables will close
// and re-open javascript comment tags

(function () {
    var jsonData, cookieMessages, session;

    /* */ jsonData = {"forum": {"use_media": true, "avatar_size": 32, "apiKey": "YWCgLBoCmr5eDUCAL40yFa8p4BFNCovAtkhVglFWT9aaZK0hxDklardJQtsjR2IX", "comment_max_words": 0, "mobile_theme_disabled": false, "is_early_adopter": false, "login_buttons_enabled": false, "streaming_realtime": false, "reply_position": false, "id": 309285, "default_avatar_url": "http://mediacdn.disqus.com/1308681305/images/noavatar32.png", "template": {"mobile": {"url": "http://mediacdn.disqus.com/1308681305/build/themes/newmobile.js", "css": "http://mediacdn.disqus.com/1308681305/build/themes/newmobile.css"}, "url": "http://mediacdn.disqus.com/1308681305/build/themes/t_c4ca4238a0b923820dcc509a6f75849b.js?1", "api": "1.0", "name": "Narcissus", "css": "http://mediacdn.disqus.com/1308681305/build/themes/t_c4ca4238a0b923820dcc509a6f75849b.css?1"}, "max_depth": 0, "lastUpdate": "", "use_old_templates": false, "linkbacks_enabled": true, "allow_anon_votes": true, "revert_new_login_flow": false, "stylesUrl": "http://mediacdn.disqus.com/uploads/styles/30/9285/streamhacker.css", "show_avatar": true, "reactions_enabled": true, "disqus_auth_disabled": false, "name": "streamhacker", "language": "en", "mentions_enabled": true, "url": "streamhacker", "allow_anon_post": true, "thread_votes_disabled": false, "hasCustomStyles": false, "moderate_all": false}, "has_more_reactions": false, "users": {"yahoo-YU5KVC5PTJR22LOKDJIN32VMPU": {"username": "yahoo-YU5KVC5PTJR22LOKDJIN32VMPU", "tumblr": "", "about": "", "display_name": "gunzip", "url": "http://disqus.com/yahoo-YU5KVC5PTJR22LOKDJIN32VMPU/", "registered": true, "remote_id": "YU5KVC5PTJR22LOKDJIN32VMPU", "linkedin": "", "blog": "http://pulse.yahoo.com/_YU5KVC5PTJR22LOKDJIN32VMPU", "remote_domain": 5, "points": 1, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/379/5526/avatar32.jpg?1281549414", "delicious": "", "is_remote": true, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": "Yahoo!"}, "twitter-35175280": {"username": "twitter-35175280", "tumblr": "", "about": "", "display_name": "Aditya Herlambang", "url": "http://disqus.com/twitter-35175280/", "registered": true, "remote_id": "35175280", "linkedin": "", "blog": "http://twitter.com/aditya_herlamba", "remote_domain": 2, "points": 2, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/477/162/avatar32.jpg?1281549414", "delicious": "", "is_remote": true, "verified": false, "flickr": "", "twitter": "http://twitter.com/aditya_herlamba", "remote_domain_name": "Twitter"}, "5262833ba7a07ec85942c283ad7fec8b": {"username": "Alex", "tumblr": "", "about": "", "display_name": "Alex", "url": "http://disqus.com/guest/5262833ba7a07ec85942c283ad7fec8b/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://media.disqus.com/uploads/anonusers/1636/1020/avatar32.jpg", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "f86a18e7f1b9ba5c069354d6eb10dd72": {"username": "Pulkit", "tumblr": "", "about": "", "display_name": "Pulkit", "url": "http://disqus.com/guest/f86a18e7f1b9ba5c069354d6eb10dd72/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1308681305/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "77acae5bba8c7daed0edfd50a8ec4523": {"username": "Dmitry Chaplinsky", "tumblr": "", "about": "", "display_name": "Dmitry Chaplinsky", "url": "http://disqus.com/guest/77acae5bba8c7daed0edfd50a8ec4523/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://hq-recovery.com", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1308681305/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "japerk": {"username": "japerk", "tumblr": "", "about": "weotta.com", "display_name": "Jacob Perkins", "url": "http://disqus.com/japerk/", "registered": true, "remote_id": null, "linkedin": "", "blog": "http://streamhacker.com/", "remote_domain": "", "points": 9, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/223/1965/avatar32.jpg?1308665048", "delicious": "", "is_remote": false, "verified": true, "flickr": "", "twitter": "http://twitter.com/japerk", "remote_domain_name": ""}, "2b52a2f8b014195204d9a913ffbd833d": {"username": "Kellegher", "tumblr": "", "about": "", "display_name": "Kellegher", "url": "http://disqus.com/guest/2b52a2f8b014195204d9a913ffbd833d/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1308681305/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "philgo20": {"username": "philgo20", "tumblr": "", "about": "Product Developer", "display_name": "philgo20", "url": "http://disqus.com/philgo20/", "registered": true, "remote_id": null, "linkedin": "in/philippegauvin", "blog": "http://philgo20.com/", "remote_domain": "", "points": 34, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/38/5203/avatar32.jpg?1307993062", "delicious": "fhb418", "is_remote": false, "verified": true, "flickr": "", "twitter": "http://twitter.com/PhilGo20", "remote_domain_name": ""}, "691b6bcefccc5fb10af4f3efa791dff7": {"username": "Clement Levallois", "tumblr": "", "about": "", "display_name": "Clement Levallois", "url": "http://disqus.com/guest/691b6bcefccc5fb10af4f3efa791dff7/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://www.clementlevallois.net", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://media.disqus.com/uploads/anonusers/1430/6069/avatar32.jpg", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}}, "ordered_highlighted": [], "reactions": [{"body": "Text Classification for Sentiment Analysis \u2013 Naive Bayes Classifier <a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://bit.ly/dslvzS</a> via", "author_name": "ivan2012", "source_url": "http://backtype.com/", "id": 36271473, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/ivan2012/status/21608961940", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a1.twimg.com/profile_images/915361145/6a00d8341c4fc953ef00e54f08bbe68833-800wi_normal.jpg", "author_url": "http://twitter.com/ivan2012/", "date_created": "10 months ago", "retweets": []}, {"body": "<a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://tinyurl.com/2fkwehg</a> \nText Classification for Sentiment Analysis \u2013 Naive Bayes Classifier \u00abstreamhacker.com", "author_name": "cube_ice", "source_url": "http://backtype.com/", "id": 32220266, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/cube_ice/status/16912153767", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://s.twimg.com/a/1276654401/images/default_profile_3_normal.png", "author_url": "http://twitter.com/cube_ice/", "date_created": "12 months ago", "retweets": []}, {"body": "Yay. Always good to see more computational linguistics submissions :) Keep 'em coming!", "author_name": "laga", "source_url": "http://backtype.com/", "id": 28536778, "get_service_url": "http://reddit.com/", "title": "", "url": "http://www.reddit.com/r/MachineLearning/comments/c252i/text_classification_for_sentiment_analysis_with_a/c0prnxd", "source": "backtype", "get_service_name": "reddit", "avatar_url": "http://mediacdn.disqus.com/1308681305/images/reactions/services/reddit_128.png", "author_url": "http://www.reddit.com/user/laga", "date_created": "1 year ago", "retweets": []}, {"body": "I once did this with a joke mailing list and [popfile](http://getpopfile.org/). Worked so well that I no longer think I have intelligent humor, I am all keyword based.", "author_name": "robotoast", "source_url": "http://backtype.com/", "id": 28503674, "get_service_url": "http://reddit.com/", "title": "", "url": "http://www.reddit.com/r/MachineLearning/comments/c252i/text_classification_for_sentiment_analysis_with_a/c0pqo0b", "source": "backtype", "get_service_name": "reddit", "avatar_url": "http://mediacdn.disqus.com/1308681305/images/reactions/services/reddit_128.png", "author_url": "http://www.reddit.com/user/robotoast", "date_created": "1 year ago", "retweets": []}, {"body": "#NLPB : streamhacker.com: Text Classification for Sentiment Analysis - Naive Bayes Classifier <a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://bit.ly/9yytPi</a> ... <a href=\"http://twitter.com/japerk/statuses/13729725608\">http://is.gd/c30pq</a>", "author_name": "nlpbot", "source_url": "http://backtype.com/", "id": 28503676, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/nlpbot/status/13740298720", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a1.twimg.com/profile_images/769814214/nlpbot_normal.jpg", "author_url": "http://twitter.com/nlpbot/", "date_created": "1 year ago", "retweets": []}, {"body": "streamhacker.com: Text Classification for Sentiment Analysis - Naive Bayes Classifier <a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://bit.ly/9yytPi</a> #nltk #nlp #python", "author_name": "japerk", "source_url": "http://backtype.com/", "id": 28503675, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/japerk/status/13729725608", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a3.twimg.com/profile_images/61021217/jacob_sunglasses_normal.jpg", "author_url": "http://twitter.com/japerk/", "date_created": "1 year ago", "retweets": []}], "realtime_enabled": false, "request": {"sort": 4, "is_authenticated": false, "user_type": "anon", "subscribe_on_post": 0, "missing_perm": null, "user_id": null, "remote_domain_name": "", "remote_domain": "", "is_verified": false, "email": "", "profile_url": "", "username": "", "is_global_moderator": false, "sharing": {}, "timestamp": "2011-06-22_00:23:37", "is_moderator": false, "forum": "streamhacker", "is_initial_load": true, "display_username": "", "points": null, "moderator_can_edit": false, "is_remote": false, "userkey": "", "page": 1}, "ordered_posts": [230967008, 231032574, 231303033, 175081652, 175095642, 175187636, 175190279, 134598383, 134601407, 130817298, 130819670, 100604692, 100632641, 101110020, 101888238, 102136835, 99473918, 99499268, 100250395, 65495558, 65627728, 55068608, 55073203, 55207362, 55218873, 55269923], "realtime_paused": false, "posts": {"102136835": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-24_17:21:09", "date": "6 months ago", "message": "It does, thank you so much.", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 101888238, "depth": 4, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "101110020": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-23_04:35:09", "date": "7 months ago", "message": "Exactly! And that is what I tried to do but I just error messages. With the example above on movie reviews, could you tell me which lines of code I should write to get a csv with these three columns? (but \"print\" on screen would be enough!) <br>(it is surely so easy that it looks silly to ask - but for the uneducated users out there, once we got tutorials on training and evaluating classifiers, we  just need this essential last extra bit to get running: the code to get the actual results on a corpus!<br>Thanks again for your patience! :-)", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 100632641, "depth": 2, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "65495558": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": "10 months ago", "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": "author", "real_date": "2010-07-31_17:26:35", "date": "10 months ago", "message": "very useful serie. i'm wondering.. can the naive bayesian classifier be trained with term weights (ie. tf-idf) or you must use a boolean word model (presence or absence of the term) ?", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "yahoo-YU5KVC5PTJR22LOKDJIN32VMPU", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "175190279": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_18:26:50", "date": "2 months ago", "message": "I haven't encountered that term, but it sounds like the same thing, where you just store True for every word found.", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 175187636, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "130817298": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-18_16:59:04", "date": "5 months ago", "message": "Funny, that using only half of dataset as training will increase the accuracy to 0.811 and even 1/4th of data producing result better than 3/4.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "77acae5bba8c7daed0edfd50a8ec4523", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "100604692": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-22_08:17:08", "date": "7 months ago", "message": "Hi Jacob again,<br><br>Sorry to use this comment section as a forum, but I am stuck and I suppose it is very easy to solve. Once I trained the classifier, I run it on my test corpus, and finally on my \"real\" uncategorized corpus, which consists in a list of documents (files). I'd like to display the results for each file: whether they have been classified as neg or pos (ideally, with a measure of confidence). For the above example on movie reviews, what would such a code look like? Thx!", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 4, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "99499268": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-19_11:09:14", "date": "7 months ago", "message": "Hi Clement,<br><br>If you've installed the nltk data, following the instructions at <a href=\"http://www.nltk.org/data,\" rel=\"nofollow\">http://www.nltk.org/data,</a> the movie_reviews will be in /usr/share/nltk_data/corpora on linux/unix, or C:\\nltk_data\\corpora on windows. It's organized with 2 subdirectories, one for pos, the other for neg.<br><br>In your case, if you don't change the filenames, you'll have to tell the CategorizedPlaintextCorpusReader how to determine the categories from the filenames using the cat_pattern kwarg. See <a href=\"http://nltk.googlecode.com/svn/trunk/doc/api/nltk.corpus.reader.api.CategorizedCorpusReader-class.html#__init__.\" rel=\"nofollow\">http://nltk.googlecode.com/svn...</a> Chapter 3 of my book should also have some examples. Then you can call fileids(categories=['neg']) to get the fileids for every file in the 'neg' category.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 99473918, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "100250395": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-21_10:14:08", "date": "7 months ago", "message": "Thanks a lot!<br>I figured since that I could already download chapter 3 for free - and it explains how this category-making works. Still working on it... so exciting stuff! Thanks for sharing!<br>", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 99499268, "depth": 2, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "55269923": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-08_06:49:49", "date": "1 year ago", "message": "Sure I am working on that these days<br>", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55218873, "depth": 4, "points": 0, "user_key": "f86a18e7f1b9ba5c069354d6eb10dd72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "55073203": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-06_22:45:24", "date": "1 year ago", "message": "Possibly, but it'd probably require a dictionary mapping sense to polarity, and of course you'd need to know the sense of the words first.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55068608, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "175081652": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_15:03:37", "date": "2 months ago", "message": "Where can I get the  movie reviews corpus has 1000 positive files and 1000 negative files? I have a naive bayes classifier and would like to use this to training", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "5262833ba7a07ec85942c283ad7fec8b", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "175187636": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_18:20:42", "date": "2 months ago", "message": "pardon my stupid question, but does the bag of words model means the same thing with  using boolean word feature extraction.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 175095642, "depth": 2, "points": 0, "user_key": "twitter-35175280", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "134601407": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-25_21:31:36", "date": "4 months ago", "message": "One of the most common ways of doing it is to train 1 binary classifier for each category, with negative training examples coming from all other categories. Then you combine all the binary classifiers into a multi-label classifier. I cover this using the reuters corpus in my book, at the of the Text Classification chapter. There's also a bunch of research papers out there on multi-label classification.", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 1, "user_voted": {"username": "philgo20", "avatar_url": "http://media.disqus.com/uploads/users/38/5203/avatar32.jpg", "display_name": "philgo20"}, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 134598383, "depth": 1, "points": 1, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55068608": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-06_21:51:50", "date": "1 year ago", "message": "Dear Sir,<br><br>Is there a way that polarity can be determined on sense level? <br>Thanking you", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 4, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "f86a18e7f1b9ba5c069354d6eb10dd72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "100632641": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-22_10:01:38", "date": "7 months ago", "message": "It all depends on what you mean by \"display\". If you just want to manually verify results, I think the easiest method is to output a csv with 2 columns: fileid, label. You could also output the probability of each label using the results from prob_classify(). Then you'd have 3 columns: fileid, neg, pos and each row would have a percent for each label.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 100604692, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55207362": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-07_21:11:58", "date": "1 year ago", "message": "Thanks for your reply,<br>Like you said \"senses of the words first\". would you have a classifier that you can post the code for? or second way can be instead of finding the senses SentiWordNet can be used straight away as senses are marked with the polarity already.<br>", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55073203, "depth": 2, "points": 0, "user_key": "f86a18e7f1b9ba5c069354d6eb10dd72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "65627728": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-08-01_16:59:14", "date": "10 months ago", "message": "The NLTK bayes classifier would not work with term weights, or at least it would consider each weight as a separate feature value. However, I believe there's an algorithm for multi-nomial naive bayes that could take into account frequencies or weights, if you want to implement it yourself. But research shows that simple word presence is about as good as a multi-nomial model.", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 1, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 65495558, "depth": 1, "points": 1, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "130819670": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-18_17:04:25", "date": "5 months ago", "message": "Without any pruning, adding more data increases noise, decreasing accuracy. But if you read the last article in the series, <a href=\"http://streamhacker.com/2010/06/16/text-classification-sentiment-analysis-eliminate-low-information-features/,\" rel=\"nofollow\">http://streamhacker.com/2010/0...</a> you'll see that with good pruning the results get much better.", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 130817298, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55218873": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-07_22:54:40", "date": "1 year ago", "message": "I don't have any word sense disambiguation code, and I've never used SentiWordNet, so I'm afraid I can't help you there. But please let me know if you're able to figure something out and get it working.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55207362, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "175095642": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_15:22:32", "date": "2 months ago", "message": "The movie_reviews corpus is included with NLTK, but you can also get it from <a href=\"http://www.cs.cornell.edu/people/pabo/movie-review-data/\" rel=\"nofollow\">http://www.cs.cornell.edu/peop...</a>", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 175081652, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "230967008": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-21_09:04:59", "date": "15 hours ago", "message": "Hi Jacob, I've got a corpus of 1000 negative files and 850 positive files. I want my training set and test set to be the same length for each category. Is there a way of randomly selecting an amount of negative files, say 650, for training purposes and 200 for testing as opposed to manually taking out the excess negative files? Want my analysis to be completely unbiased", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "2b52a2f8b014195204d9a913ffbd833d", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "101888238": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-24_10:04:51", "date": "6 months ago", "message": "To print out the label of each file, after you've trained the classifier, the code would be:<br><br>for fileid in movie_reviews.fileids():<br>    feats = word_feats(movie_reviews.words(fileids=[f]))<br>    label = classifier.classify(feats)<br>    print fileid, label<br><br>To create a csv, first you open a file &amp; create a csv.writer, then replace the print line with writer.append([fileid, label]). Does that answer your question?", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 101110020, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "134598383": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-25_21:23:08", "date": "4 months ago", "message": "Do you have a cue on where to start to classify in multiple categories ?<br>I mean not positive/negative classification but one or multiple of 280 categories ?", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "philgo20", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "231032574": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-21_10:04:07", "date": "14 hours ago", "message": "What you could do is limit the fileids used. For example, in my code above, instead of\u00a0negids = movie_reviews.fileids('neg')\u00a0you could do\u00a0negids = movie_reviews.fileids('neg')[:850]. Then both pos &amp; neg have an equal number of files, and you can divide them up for training &amp; testing however you want.", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 230967008, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "231303033": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-21_16:51:36", "date": "7 hours ago", "message": "thanks for your help Jacob", "approved": true, "is_last_child": true, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 231032574, "depth": 2, "points": 0, "user_key": "2b52a2f8b014195204d9a913ffbd833d", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "99473918": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "ip": "", "last_modified_date": null, "dislikes": 0, "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-19_10:35:59", "date": "7 months ago", "message": "Hi,<br>Thanks for these great tutorials - I bought the book to get more of it!<br><br>I try to run the above code on my own corpus (called \"wordlists\").<br>This data is two sets of files, each in a separate folder. Files with a positive connotation have \"pos\" in their name, those with negative sentiment have \"neg\" in theirs.<br><br>I import this data, following section 2.1 at <a href=\"http://nltk.googlecode.com/svn/trunk/doc/book/ch02.html\" rel=\"nofollow\">http://nltk.googlecode.com/svn...</a><br><br>Then, I run the code above but get into this:<br>wordlists.fileids('neg')<br><br>TypeError: fileids() takes exactly 1 argument (2 given)<br><br>Beyond fixing this error, what would really help me would be to know where \"movie_reviews\" is located on my disk, so that I could exactly replicate its data structure (names of files and folders, etc.) - but with my own data. Could you just tell me where movie_reviews is installed?", "approved": true, "is_last_child": false, "can_edit": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}}, "integration": {"receiver_url": null, "hide_user_votes": false, "reply_position": false, "disqus_logo": false}, "highlighted": {}, "thread": {"voters_count": 0, "offset_posts": 0, "slug": "text_classification_for_sentiment_analysis_8211_naive_bayes_classifier", "paginate": false, "num_pages": 1, "days_alive": 0, "moderate_none": false, "voters": {}, "total_posts": 26, "realtime_paused": false, "queued": false, "pagination_type": "append", "user_vote": null, "likes": 0, "num_posts": 26, "closed": false, "per_page": 0, "id": 94082879, "killed": false, "moderate_all": false}, "reactions_limit": 10, "context": {"use_twitter_signin": true, "use_fb_connect": false, "show_reply": true, "active_switches": ["bespin", "community_icon", "embedapi", "google_auth", "mentions", "new_facebook_auth", "realtime_cached", "show_captcha_on_links", "ssl", "static_reply_frame", "static_styles", "statsd_created", "upload_media", "use_rs_paginator_30m"], "sigma_chance": 10, "use_google_signin": false, "switches": {"statsd": false, "disable_realtime": false, "use_rs_paginator_30m": true, "debug_js": false, "google_auth": true, "achievements_hits": false, "community_icon": true, "realtime_cached": true, "static_styles": true, "upload_media": true, "addons_ab_test": false, "show_captcha_on_links": true, "statsd_created": true, "bespin": true, "preview_new_theme": false, "post_sort_paginator": false, "new_facebook_auth": true, "frasier": false, "achievements": false, "moderate_search": false, "new_thread_create": false, "embedapi": true, "ssl": true, "autocommitted_thread": false, "media_versioned_themes": false, "use_rs_paginator_5m": false, "sexymap": false, "search": false, "post_sort_paginator_index": false, "use_rs_paginator_60m": false, "mentions": true, "sigma": false, "enable_random_recommendations": false, "static_reply_frame": true}, "forum_facebook_key": "", "use_yahoo": true, "subscribed": false, "active_gargoyle_switches": ["limit_get_posts_days_30d", "listactivity_replies", "show_captcha_on_links"], "realtime_speed": 15000, "use_openid": true}, "ready": true, "mediaembed": [], "reactions_start": 0, "settings": {"uploads_url": "http://media.disqus.com/uploads", "ssl_media_url": "https://securecdn.disqus.com/1308681305", "realtime_url": "http://rt.disqus.com/forums/realtime-cached.js", "facebook_app_id": "52254943976", "minify_js": true, "recaptcha_public_key": "6LdKMrwSAAAAAPPLVhQE9LPRW4LUSZb810_iaa8u", "read_only": false, "facebook_api_key": "4aaa6c7038653ad2e4dbeba175a679ba", "debug": false, "disqus_url": "http://disqus.com", "media_url": "http://mediacdn.disqus.com/1308681305"}, "messagesx": {"count": 0, "unread": []}, "media_url": "http://mediacdn.disqus.com/1308681305"}; /* */
    /* */ cookieMessages = {"user_created": null, "post_has_profile": null, "post_twitter": null, "post_not_approved": null}; session = {"url": null, "name": null, "email": null}; /* */

    DISQUS.jsonData = jsonData;
    DISQUS.jsonData.cookie_messages = cookieMessages;
    DISQUS.jsonData.session = session;

    if (DISQUS.useSSL) {
        DISQUS.useSSL(DISQUS.jsonData.settings);
    }
    DISQUS.lang.extend(DISQUS.settings, DISQUS.jsonData.settings);
}());

DISQUS.jsonData.context.csrf_token = '21bc467119200cb06806902fa8e2f5b0';

DISQUS.jsonData.urls = {
    login: 'http://disqus.com/profile/login/',
    logout: 'http://disqus.com/logout/',
    upload_remove: 'http://streamhacker.disqus.com/thread/text_classification_for_sentiment_analysis_8211_naive_bayes_classifier/async_media_remove/',
    request_user_profile: 'http://disqus.com/AnonymousUser/',
    request_user_avatar: 'http://mediacdn.disqus.com/1308681305/images/noavatar92.png',
    verify_email: 'http://disqus.com/verify/',
    remote_settings: 'http://streamhacker.disqus.com/_auth/embed/remote_settings/',
    embed_thread: 'http://streamhacker.disqus.com/thread.js',
    embed_profile: 'http://disqus.com/embed/profile.js',
    embed_vote: 'http://streamhacker.disqus.com/vote.js',
    embed_thread_vote: 'http://streamhacker.disqus.com/thread_vote.js',
    embed_thread_share: 'http://streamhacker.disqus.com/thread_share.js',
    embed_queueurl: 'http://streamhacker.disqus.com/queueurl.js',
    embed_hidereaction: 'http://streamhacker.disqus.com/hidereaction.js',
    embed_more_reactions: 'http://streamhacker.disqus.com/more_reactions.js',
    embed_subscribe: 'http://streamhacker.disqus.com/subscribe.js',
    embed_highlight: 'http://streamhacker.disqus.com/highlight.js',
    embed_block: 'http://streamhacker.disqus.com/block.js',
    update_moderate_all: 'http://streamhacker.disqus.com/update_moderate_all.js',
    update_days_alive: 'http://streamhacker.disqus.com/update_days_alive.js',
    show_user_votes: 'http://streamhacker.disqus.com/show_user_votes.js',
    forum_view: 'http://streamhacker.disqus.com/text_classification_for_sentiment_analysis_8211_naive_bayes_classifier',
    cnn_saml_try: 'http://disqus.com/saml/cnn/try/',
    realtime: DISQUS.jsonData.settings.realtime_url,
    thread_view: 'http://streamhacker.disqus.com/thread/text_classification_for_sentiment_analysis_8211_naive_bayes_classifier/',
    twitter_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/twitter/begin/',
    yahoo_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/yahoo/begin/',
    openid_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/openid/begin/',
    googleConnect: DISQUS.jsonData.settings.disqus_url + '/_ax/google/begin/',
    community: 'http://streamhacker.disqus.com/community.html',
    admin: 'http://streamhacker.disqus.com/admin/moderate/',
    moderate: 'http://streamhacker.disqus.com/admin/moderate/',
    moderate_threads: 'http://streamhacker.disqus.com/admin/moderate-threads/',
    settings: 'http://streamhacker.disqus.com/admin/settings/',
    unmerged_profiles: 'http://disqus.com/embed/profile/unmerged_profiles/',

    channels: {
        def:      'http://disqus.com/default.html', /* default channel */
        auth:     'https://secure.disqus.com/embed/login.html',
        tweetbox: 'http://disqus.com/forums/integrations/twitter/tweetbox.html?f=streamhacker',
        edit:     'http://streamhacker.disqus.com/embed/editcomment.html',

        
        
        reply:    'http://mediacdn.disqus.com/1308681305/build/system/reply.html',
        upload:   'http://mediacdn.disqus.com/1308681305/build/system/upload.html',
        sso:      'http://mediacdn.disqus.com/1308681305/build/system/sso.html',
        facebook: 'http://mediacdn.disqus.com/1308681305/build/system/facebook.html'
        
        
    }
};
