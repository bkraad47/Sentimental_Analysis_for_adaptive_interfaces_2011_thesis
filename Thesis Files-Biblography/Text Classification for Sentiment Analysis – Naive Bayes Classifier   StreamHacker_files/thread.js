/*jslint evil:true */
/**
 * Dynamic thread loader
 *
 * 
 * 
 * 
 * 
 * 
*/

// 
var DISQUS;
if (!DISQUS || typeof DISQUS == 'function') {
    throw "DISQUS object is not initialized";
}
// 

// json_data and default_json django template variables will close
// and re-open javascript comment tags

(function () {
    var jsonData, cookieMessages, session, key;

    /* */ jsonData = {"reactions": [{"body": "@rayfranco @danetag tu peux tr\u00e8s facilement entrainer un mod\u00e8le, du genre utiliser la lib NLTK comme \u00e7a http://t.co/NqF29FhD", "author_name": "syhw", "source_url": "http://backtype.com/", "id": 74512164, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/syhw/status/132103925628276736", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a2.twimg.com/profile_images/450283869/ebaa619b766a901aa30f7eb678541ed9_normal.jpg", "author_url": "#", "date_created": "1 month ago", "retweets": []}, {"body": "Using NLTK to build you own sentiment analysis classifier: http://t.co/8en25qo", "author_name": "arnaudsj", "source_url": "http://backtype.com/", "id": 61910282, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/arnaudsj/status/103806221324271616", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a2.twimg.com/profile_images/1225003048/Sebastien_250x250_normal.png", "author_url": "#", "date_created": "3 months ago", "retweets": []}, {"body": "RT @delicious50: Text Classification for Sentiment Analysis \u2013 Naive Bayes Classifier | StreamHacker http://t.co/l5Yyoji", "author_name": "SentimentSymp", "source_url": "http://backtype.com/", "id": 61910283, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/SentimentSymp/status/103730644143714304", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a0.twimg.com/profile_images/639675502/sas_logo_4c_vert_normal.jpg", "author_url": "#", "date_created": "3 months ago", "retweets": []}, {"body": "Text Classification for Sentiment Analysis \u2013 Naive Bayes Classifier | StreamHacker http://t.co/l5Yyoji", "author_name": "delicious50", "source_url": "http://backtype.com/", "id": 61910281, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/delicious50/status/102519604114497536", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a3.twimg.com/profile_images/831237884/Delicious_Over_50_normal.png", "author_url": "#", "date_created": "4 months ago", "retweets": []}, {"body": "Text Classification for SA - NB Calssifier\nhttp://t.co/jS6W4ez", "author_name": "acepor", "source_url": "http://backtype.com/", "id": 55533910, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/acepor/status/88906314562011136", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a1.twimg.com/profile_images/1146061692/R0017038_2_normal.jpg", "author_url": "#", "date_created": "5 months ago", "retweets": []}, {"body": "Text Classification for Sentiment Analysis \u2013 Naive Bayes Classifier <a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://bit.ly/dslvzS</a> via", "author_name": "ivan2012", "source_url": "http://backtype.com/", "id": 25277580, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/ivan2012/status/21608961940", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a1.twimg.com/profile_images/915361145/6a00d8341c4fc953ef00e54f08bbe68833-800wi_normal.jpg", "author_url": "#", "date_created": "1 year ago", "retweets": []}, {"body": "<a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://tinyurl.com/2fkwehg</a> \nText Classification for Sentiment Analysis \u2013 Naive Bayes Classifier \u00abstreamhacker.com", "author_name": "cube_ice", "source_url": "http://backtype.com/", "id": 21394664, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/cube_ice/status/16912153767", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://s.twimg.com/a/1276654401/images/default_profile_3_normal.png", "author_url": "#", "date_created": "1 year ago", "retweets": []}, {"body": "#NLPB : streamhacker.com: Text Classification for Sentiment Analysis - Naive Bayes Classifier <a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://bit.ly/9yytPi</a> ... <a href=\"http://twitter.com/japerk/statuses/13729725608\">http://is.gd/c30pq</a>", "author_name": "nlpbot", "source_url": "http://backtype.com/", "id": 17988410, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/nlpbot/status/13740298720", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a1.twimg.com/profile_images/769814214/nlpbot_normal.jpg", "author_url": "#", "date_created": "1 year ago", "retweets": []}, {"body": "streamhacker.com: Text Classification for Sentiment Analysis - Naive Bayes Classifier <a href=\"http://streamhacker.com/2010/05/10/text-classification-sentiment-analysis-naive-bayes-classifier/\">http://bit.ly/9yytPi</a> #nltk #nlp #python", "author_name": "japerk", "source_url": "http://backtype.com/", "id": 17988409, "get_service_url": "http://twitter.com/", "title": "", "url": "http://twitter.com/japerk/status/13729725608", "source": "backtype", "get_service_name": "twitter", "avatar_url": "http://a3.twimg.com/profile_images/61021217/jacob_sunglasses_normal.jpg", "author_url": "#", "date_created": "1 year ago", "retweets": []}], "reactions_limit": 10, "ordered_highlighted": [], "posts": {"290913021": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "It all depends on what you want to classify. But whatever it is, you need a training corpus, ideally structured similarly to the movie_reviews corpus. Once you've got that, you can train a classifier in a very similar way.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-08-19_10:29:29", "date": "3 months ago", "message": "It all depends on what you want to classify. But whatever it is, you need a training corpus, ideally structured similarly to the movie_reviews corpus. Once you've got that, you can train a classifier in a very similar way.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 290790374, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "101110020": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Exactly! And that is what I tried to do but I just error messages. With the example above on movie reviews, could you tell me which lines of code I should write to get a csv with these three columns? (but \"print\" on screen would be enough!) \n(it is surely so easy that it looks silly to ask - but for the uneducated users out there, once we got tutorials on training and evaluating classifiers, we  just need this essential last extra bit to get running: the code to get the actual results on a corpus!\nThanks again for your patience! :-)", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-23_04:35:09", "date": "1 year ago", "message": "Exactly! And that is what I tried to do but I just error messages. With the example above on movie reviews, could you tell me which lines of code I should write to get a csv with these three columns? (but \"print\" on screen would be enough!) <br>(it is surely so easy that it looks silly to ask - but for the uneducated users out there, once we got tutorials on training and evaluating classifiers, we  just need this essential last extra bit to get running: the code to get the actual results on a corpus!<br>Thanks again for your patience! :-)", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 100632641, "depth": 2, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "65495558": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": "1 year ago", "dislikes": 0, "raw_message": "very useful serie. i'm wondering.. can the naive bayesian classifier be trained with term weights (ie. tf-idf) or you must use a boolean word model (presence or absence of the term) ?", "has_replies": false, "vote": false, "votable": true, "last_modified_by": "author", "real_date": "2010-07-31_17:26:35", "date": "1 year ago", "message": "very useful serie. i'm wondering.. can the naive bayesian classifier be trained with term weights (ie. tf-idf) or you must use a boolean word model (presence or absence of the term) ?", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "yahoo-YU5KVC5PTJR22LOKDJIN32VMPU", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "175190279": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "I haven't encountered that term, but it sounds like the same thing, where you just store True for every word found.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_18:26:50", "date": "8 months ago", "message": "I haven't encountered that term, but it sounds like the same thing, where you just store True for every word found.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 175187636, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "99499268": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi Clement,\n\nIf you've installed the nltk data, following the instructions at http://www.nltk.org/data, the movie_reviews will be in /usr/share/nltk_data/corpora on linux/unix, or C:\\nltk_data\\corpora on windows. It's organized with 2 subdirectories, one for pos, the other for neg.\n\nIn your case, if you don't change the filenames, you'll have to tell the CategorizedPlaintextCorpusReader how to determine the categories from the filenames using the cat_pattern kwarg. See http://nltk.googlecode.com/svn/trunk/doc/api/nltk.corpus.reader.api.CategorizedCorpusReader-class.html#__init__. Chapter 3 of my book should also have some examples. Then you can call fileids(categories=['neg']) to get the fileids for every file in the 'neg' category.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-19_11:09:14", "date": "1 year ago", "message": "Hi Clement,<br><br>If you've installed the nltk data, following the instructions at <a href=\"http://www.nltk.org/data\" rel=\"nofollow\">http://www.nltk.org/data</a>, the movie_reviews will be in /usr/share/nltk_data/corpora on linux/unix, or C:\\nltk_data\\corpora on windows. It's organized with 2 subdirectories, one for pos, the other for neg.<br><br>In your case, if you don't change the filenames, you'll have to tell the CategorizedPlaintextCorpusReader how to determine the categories from the filenames using the cat_pattern kwarg. See <a href=\"http://nltk.googlecode.com/svn/trunk/doc/api/nltk.corpus.reader.api.CategorizedCorpusReader-class.html#__init__\" rel=\"nofollow\">http://nltk.googlecode.com/svn...</a>. Chapter 3 of my book should also have some examples. Then you can call fileids(categories=['neg']) to get the fileids for every file in the 'neg' category.", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 99473918, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "130817298": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Funny, that using only half of dataset as training will increase the accuracy to 0.811 and even 1/4th of data producing result better than 3/4.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-18_16:59:04", "date": "10 months ago", "message": "Funny, that using only half of dataset as training will increase the accuracy to 0.811 and even 1/4th of data producing result better than 3/4.", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "77acae5bba8c7daed0edfd50a8ec4523", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "102136835": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "It does, thank you so much.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-24_17:21:09", "date": "1 year ago", "message": "It does, thank you so much.", "approved": true, "is_last_child": true, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 101888238, "depth": 4, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "100604692": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi Jacob again,\n\nSorry to use this comment section as a forum, but I am stuck and I suppose it is very easy to solve. Once I trained the classifier, I run it on my test corpus, and finally on my \"real\" uncategorized corpus, which consists in a list of documents (files). I'd like to display the results for each file: whether they have been classified as neg or pos (ideally, with a measure of confidence). For the above example on movie reviews, what would such a code look like? Thx!", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-22_08:17:08", "date": "1 year ago", "message": "Hi Jacob again,<br><br>Sorry to use this comment section as a forum, but I am stuck and I suppose it is very easy to solve. Once I trained the classifier, I run it on my test corpus, and finally on my \"real\" uncategorized corpus, which consists in a list of documents (files). I'd like to display the results for each file: whether they have been classified as neg or pos (ideally, with a measure of confidence). For the above example on movie reviews, what would such a code look like? Thx!", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 4, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "352859673": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "The underlying model is an ensemble of binary NaiveBayes and MaximumEntropy classifiers, setup in a hierarchy of neutral-polar, then pos-neg. I'm sure there's papers on those topics, but there's nothing specific I referenced to create the API.\n\nI don't know of any API that does arousal in addition to valence. If you find one, please let me know.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-11-01_11:05:06", "date": "1 month ago", "message": "The underlying model is an ensemble of binary NaiveBayes and MaximumEntropy classifiers, setup in a hierarchy of neutral-polar, then pos-neg. I'm sure there's papers on those topics, but there's nothing specific I referenced to create the API.<br><br>I don't know of any API that does arousal in addition to valence. If you find one, please let me know.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 352740391, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "239309337": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "thanks for your answer. I have another question, in your code, you know how I can eliminate the less important words and just let the words of most relevance. Thanks, hopefully you can help me.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-07-01_00:52:22", "date": "5 months ago", "message": "thanks for your answer. I have another question, in your code, you know how I can eliminate the less important words and just let the words of most relevance. Thanks, hopefully you can help me.", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 239218093, "depth": 2, "points": 0, "user_key": "3a649674f0e4ce2cd26cbb8cd6fee10c", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "100250395": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Thanks a lot!\nI figured since that I could already download chapter 3 for free - and it explains how this category-making works. Still working on it... so exciting stuff! Thanks for sharing!\n", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-21_10:14:08", "date": "1 year ago", "message": "Thanks a lot!<br>I figured since that I could already download chapter 3 for free - and it explains how this category-making works. Still working on it... so exciting stuff! Thanks for sharing!<br>", "approved": true, "is_last_child": true, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 99499268, "depth": 2, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "55269923": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Sure I am working on that these days\n", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-08_06:49:49", "date": "1 year ago", "message": "Sure I am working on that these days<br>", "approved": true, "is_last_child": true, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55218873, "depth": 4, "points": 0, "user_key": "f86a18e7f1b9ba5c069354d6eb10dd72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "352740391": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi, i am about to use you API for my thesis. Could you perhaps point me to an published (scientifc ) article which explains the underlying model of your implementation?\u00a0\n\nAlso: would you perhaps know about an API which returns sentiment as valence (pos vs neg) and arousal (calm vs activated)? I would like to do a comparison between the two types!\n\nthanks alot and for all your work at the NLTK!", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-11-01_07:53:21", "date": "1 month ago", "message": "Hi, i am about to use you API for my thesis. Could you perhaps point me to an published (scientifc ) article which explains the underlying model of your implementation?\u00a0<br><br>Also: would you perhaps know about an API which returns sentiment as valence (pos vs neg) and arousal (calm vs activated)? I would like to do a comparison between the two types!<br><br>thanks alot and for all your work at the NLTK!", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "twitter-402640187", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "239218093": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "You will need to tokenize the words in the tweet. The easiest way to do it is something like this: word_feats(nltk.tokenize.word_tokenize(twe))\n\nYou will have to import nltk.tokenize first. Also take a look at http://text-processing.com/demo/tokenize/ for more tokenization options.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-30_22:46:50", "date": "5 months ago", "message": "You will need to tokenize the words in the tweet. The easiest way to do it is something like this: word_feats(nltk.tokenize.word_tokenize(twe))<br><br>You will have to import nltk.tokenize first. Also take a look at <a href=\"http://text-processing.com/demo/tokenize/\" rel=\"nofollow\">http://text-processing.com/dem...</a> for more tokenization options.", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 239172605, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55073203": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Possibly, but it'd probably require a dictionary mapping sense to polarity, and of course you'd need to know the sense of the words first.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-06_22:45:24", "date": "1 year ago", "message": "Possibly, but it'd probably require a dictionary mapping sense to polarity, and of course you'd need to know the sense of the words first.", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55068608, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "175187636": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "pardon my stupid question, but does the bag of words model means the same thing with  using boolean word feature extraction.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_18:20:42", "date": "8 months ago", "message": "pardon my stupid question, but does the bag of words model means the same thing with  using boolean word feature extraction.", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 175095642, "depth": 2, "points": 0, "user_key": "twitter-35175280", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "247465141": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Yes, just pickle the trained classifier to a file, then reload/unpickle later. If you store the classifier in a nltk_data directory, you can also use nltk.data.load to load & unpickle the classifier.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-07-10_22:43:37", "date": "5 months ago", "message": "Yes, just pickle the trained classifier to a file, then reload/unpickle later. If you store the classifier in a nltk_data directory, you can also use nltk.data.load to load &amp; unpickle the classifier.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 247460067, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "175081652": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Where can I get the  movie reviews corpus has 1000 positive files and 1000 negative files? I have a naive bayes classifier and would like to use this to training", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_15:03:37", "date": "8 months ago", "message": "Where can I get the  movie reviews corpus has 1000 positive files and 1000 negative files? I have a naive bayes classifier and would like to use this to training", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "5262833ba7a07ec85942c283ad7fec8b", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "134601407": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "One of the most common ways of doing it is to train 1 binary classifier for each category, with negative training examples coming from all other categories. Then you combine all the binary classifiers into a multi-label classifier. I cover this using the reuters corpus in my book, at the of the Text Classification chapter. There's also a bunch of research papers out there on multi-label classification.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-25_21:31:36", "date": "10 months ago", "message": "One of the most common ways of doing it is to train 1 binary classifier for each category, with negative training examples coming from all other categories. Then you combine all the binary classifiers into a multi-label classifier. I cover this using the reuters corpus in my book, at the of the Text Classification chapter. There's also a bunch of research papers out there on multi-label classification.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 1, "user_voted": {"username": "philgo20", "avatar_url": "http://media.disqus.com/uploads/users/38/5203/avatar32.jpg", "display_name": "philgo20"}, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 134598383, "depth": 1, "points": 1, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55068608": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Dear Sir,\n\nIs there a way that polarity can be determined on sense level? \nThanking you", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-06_21:51:50", "date": "1 year ago", "message": "Dear Sir,<br><br>Is there a way that polarity can be determined on sense level? <br>Thanking you", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 4, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "f86a18e7f1b9ba5c069354d6eb10dd72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "100632641": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "It all depends on what you mean by \"display\". If you just want to manually verify results, I think the easiest method is to output a csv with 2 columns: fileid, label. You could also output the probability of each label using the results from prob_classify(). Then you'd have 3 columns: fileid, neg, pos and each row would have a percent for each label.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-22_10:01:38", "date": "1 year ago", "message": "It all depends on what you mean by \"display\". If you just want to manually verify results, I think the easiest method is to output a csv with 2 columns: fileid, label. You could also output the probability of each label using the results from prob_classify(). Then you'd have 3 columns: fileid, neg, pos and each row would have a percent for each label.", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 100604692, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55207362": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Thanks for your reply,\nLike you said \"senses of the words first\". would you have a classifier that you can post the code for? or second way can be instead of finding the senses SentiWordNet can be used straight away as senses are marked with the polarity already.\n", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-07_21:11:58", "date": "1 year ago", "message": "Thanks for your reply,<br>Like you said \"senses of the words first\". would you have a classifier that you can post the code for? or second way can be instead of finding the senses SentiWordNet can be used straight away as senses are marked with the polarity already.<br>", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55073203, "depth": 2, "points": 0, "user_key": "f86a18e7f1b9ba5c069354d6eb10dd72", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "65627728": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "The NLTK bayes classifier would not work with term weights, or at least it would consider each weight as a separate feature value. However, I believe there's an algorithm for multi-nomial naive bayes that could take into account frequencies or weights, if you want to implement it yourself. But research shows that simple word presence is about as good as a multi-nomial model.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-08-01_16:59:14", "date": "1 year ago", "message": "The NLTK bayes classifier would not work with term weights, or at least it would consider each weight as a separate feature value. However, I believe there's an algorithm for multi-nomial naive bayes that could take into account frequencies or weights, if you want to implement it yourself. But research shows that simple word presence is about as good as a multi-nomial model.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 1, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 65495558, "depth": 1, "points": 1, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "240235733": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Please see my followup article on this topic:\u00a0http://streamhacker.com/2010/06/16/text-classification-sentiment-analysis-eliminate-low-information-features/\n\nHowever, the words that are significant for movie reviews are likely to be different than words that are significant for tweets, so for best results, you will probably want your own corpus to learn from.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-07-01_16:11:26", "date": "5 months ago", "message": "Please see my followup article on this topic:\u00a0<a href=\"http://streamhacker.com/2010/06/16/text-classification-sentiment-analysis-eliminate-low-information-features/\" rel=\"nofollow\">http://streamhacker.com/2010/0...</a><br><br>However, the words that are significant for movie reviews are likely to be different than words that are significant for tweets, so for best results, you will probably want your own corpus to learn from.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 239309337, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "130819670": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Without any pruning, adding more data increases noise, decreasing accuracy. But if you read the last article in the series, http://streamhacker.com/2010/06/16/text-classification-sentiment-analysis-eliminate-low-information-features/, you'll see that with good pruning the results get much better.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-18_17:04:25", "date": "10 months ago", "message": "Without any pruning, adding more data increases noise, decreasing accuracy. But if you read the last article in the series, <a href=\"http://streamhacker.com/2010/06/16/text-classification-sentiment-analysis-eliminate-low-information-features/\" rel=\"nofollow\">http://streamhacker.com/2010/0...</a>, you'll see that with good pruning the results get much better.", "approved": true, "is_last_child": true, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 130817298, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "55218873": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "I don't have any word sense disambiguation code, and I've never used SentiWordNet, so I'm afraid I can't help you there. But please let me know if you're able to figure something out and get it working.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-06-07_22:54:40", "date": "1 year ago", "message": "I don't have any word sense disambiguation code, and I've never used SentiWordNet, so I'm afraid I can't help you there. But please let me know if you're able to figure something out and get it working.", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 55207362, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "175095642": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "The movie_reviews corpus is included with NLTK, but you can also get it from http://www.cs.cornell.edu/people/pabo/movie-review-data/", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-03-30_15:22:32", "date": "8 months ago", "message": "The movie_reviews corpus is included with NLTK, but you can also get it from <a href=\"http://www.cs.cornell.edu/people/pabo/movie-review-data/\" rel=\"nofollow\">http://www.cs.cornell.edu/peop...</a>", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 175081652, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "230967008": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi Jacob, I've got a corpus of 1000 negative files and 850 positive files. I want my training set and test set to be the same length for each category. Is there a way of randomly selecting an amount of negative files, say 650, for training purposes and 200 for testing as opposed to manually taking out the excess negative files? Want my analysis to be completely unbiased", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-21_09:04:59", "date": "5 months ago", "message": "Hi Jacob, I've got a corpus of 1000 negative files and 850 positive files. I want my training set and test set to be the same length for each category. Is there a way of randomly selecting an amount of negative files, say 650, for training purposes and 200 for testing as opposed to manually taking out the excess negative files? Want my analysis to be completely unbiased", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "2b52a2f8b014195204d9a913ffbd833d", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "247460067": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi, Nice Explanation! I am working on a similar project and wanted to know if there is a way to save the trained model somehow and then be able to use/reload it later to classify news data that I input? Because right now every time I run the script it takes a long time to train the classifier since the training set is huge (300K samples).", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-07-10_22:26:32", "date": "5 months ago", "message": "Hi, Nice Explanation! I am working on a similar project and wanted to know if there is a way to save the trained model somehow and then be able to use/reload it later to classify news data that I input? Because right now every time I run the script it takes a long time to train the classifier since the training set is huge (300K samples).", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "google-d8ace960f295f69136bdf17f547c96c0", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "290790374": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi,\nexplaination is worth seeing , can you shed some light on how we can implement car evaluvation using navie bay's classification algo ", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-08-19_05:11:10", "date": "3 months ago", "message": "Hi,<br>explaination is worth seeing , can you shed some light on how we can implement car evaluvation using navie bay's classification algo", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "0eb375090884273ee1b70cf4eeb16d82", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "101888238": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "To print out the label of each file, after you've trained the classifier, the code would be:\n\nfor fileid in movie_reviews.fileids():\n    feats = word_feats(movie_reviews.words(fileids=[f]))\n    label = classifier.classify(feats)\n    print fileid, label\n\nTo create a csv, first you open a file & create a csv.writer, then replace the print line with writer.append([fileid, label]). Does that answer your question?", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-24_10:04:51", "date": "1 year ago", "message": "To print out the label of each file, after you've trained the classifier, the code would be:<br><br>for fileid in movie_reviews.fileids():<br>    feats = word_feats(movie_reviews.words(fileids=[f]))<br>    label = classifier.classify(feats)<br>    print fileid, label<br><br>To create a csv, first you open a file &amp; create a csv.writer, then replace the print line with writer.append([fileid, label]). Does that answer your question?", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 101110020, "depth": 3, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}, "134598383": {"edited": false, "author_is_moderator": false, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Do you have a cue on where to start to classify in multiple categories ?\nI mean not positive/negative classification but one or multiple of 280 categories ?", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-01-25_21:23:08", "date": "10 months ago", "message": "Do you have a cue on where to start to classify in multiple categories ?<br>I mean not positive/negative classification but one or multiple of 280 categories ?", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "philgo20", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "99473918": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi,\nThanks for these great tutorials - I bought the book to get more of it!\n\nI try to run the above code on my own corpus (called \"wordlists\").\nThis data is two sets of files, each in a separate folder. Files with a positive connotation have \"pos\" in their name, those with negative sentiment have \"neg\" in theirs.\n\nI import this data, following section 2.1 at http://nltk.googlecode.com/svn/trunk/doc/book/ch02.html\n\nThen, I run the code above but get into this:\nwordlists.fileids('neg')\n\nTypeError: fileids() takes exactly 1 argument (2 given)\n\nBeyond fixing this error, what would really help me would be to know where \"movie_reviews\" is located on my disk, so that I could exactly replicate its data structure (names of files and folders, etc.) - but with my own data. Could you just tell me where movie_reviews is installed?", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2010-11-19_10:35:59", "date": "1 year ago", "message": "Hi,<br>Thanks for these great tutorials - I bought the book to get more of it!<br><br>I try to run the above code on my own corpus (called \"wordlists\").<br>This data is two sets of files, each in a separate folder. Files with a positive connotation have \"pos\" in their name, those with negative sentiment have \"neg\" in theirs.<br><br>I import this data, following section 2.1 at <a href=\"http://nltk.googlecode.com/svn/trunk/doc/book/ch02.html\" rel=\"nofollow\">http://nltk.googlecode.com/svn...</a><br><br>Then, I run the code above but get into this:<br>wordlists.fileids('neg')<br><br>TypeError: fileids() takes exactly 1 argument (2 given)<br><br>Beyond fixing this error, what would really help me would be to know where \"movie_reviews\" is located on my disk, so that I could exactly replicate its data structure (names of files and folders, etc.) - but with my own data. Could you just tell me where movie_reviews is installed?", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 2, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "691b6bcefccc5fb10af4f3efa791dff7", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "231303033": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "thanks for your help Jacob", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-21_16:51:36", "date": "5 months ago", "message": "thanks for your help Jacob", "approved": true, "is_last_child": true, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 0, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 231032574, "depth": 2, "points": 0, "user_key": "2b52a2f8b014195204d9a913ffbd833d", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "239172605": {"edited": false, "author_is_moderator": false, "from_request_user": null, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "Hi Jacob, I try to do an analyze of feelings for tweet, I want to use your code. I'm using the api tweepy like this: api=tweepy.API()busqueda = api.search(\"movie\", 'en','','50')i get the tweets.Then I want to know if positive or negative in the following way:for tweet in busqueda:\u00a0\u00a0\u00a0 twe = tweet.text.encode('utf-8')\u00a0\u00a0\u00a0 feats = word_feats(twe.words())\u00a0\u00a0\u00a0 label = classifier.classify(feats)\u00a0\u00a0\u00a0 print twe, labelthrough your code, but i got this error:Traceback (most recent call last):\u00a0 File \"cl.py\", line 27, in <module>\u00a0\u00a0\u00a0 feats = word_feats(twe.words())AttributeError: 'str' object has no attribute 'wordsCould you help please?, Or if there is a better way. thanks", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-30_20:34:07", "date": "5 months ago", "message": "Hi Jacob, I try to do an analyze of feelings for tweet, I want to use your code. I'm using the api tweepy like this: api=tweepy.API()busqueda = api.search(\"movie\", 'en','','50')i get the tweets.Then I want to know if positive or negative in the following way:for tweet in busqueda:\u00a0\u00a0\u00a0 twe = tweet.text.encode('utf-8')\u00a0\u00a0\u00a0 feats = word_feats(twe.words())\u00a0\u00a0\u00a0 label = classifier.classify(feats)\u00a0\u00a0\u00a0 print twe, labelthrough your code, but i got this error:Traceback (most recent call last):\u00a0 File \"<a href=\"http://cl.py\" rel=\"nofollow\">cl.py</a>\", line 27, in &lt;module&gt;\u00a0\u00a0\u00a0 feats = word_feats(twe.words())AttributeError: 'str' object has no attribute 'wordsCould you help please?, Or if there is a better way. thanks&lt;/module&gt;", "approved": true, "is_last_child": false, "author_is_founder": false, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 3, "down_voted": false, "is_first_child": false, "has_been_anonymized": false, "highlighted": false, "parent_post_id": null, "depth": 0, "points": 0, "user_key": "3a649674f0e4ce2cd26cbb8cd6fee10c", "author_is_creator": false, "email": "", "killed": false, "is_realtime": false}, "231032574": {"edited": false, "author_is_moderator": true, "from_request_user": false, "up_voted": false, "can_edit": false, "ip": "", "last_modified_date": null, "dislikes": 0, "raw_message": "What you could do is limit the fileids used. For example, in my code above, instead of\u00a0negids = movie_reviews.fileids('neg')\u00a0you could do\u00a0negids = movie_reviews.fileids('neg')[:850]. Then both pos & neg have an equal number of files, and you can divide them up for training & testing however you want.", "has_replies": false, "vote": false, "votable": true, "last_modified_by": null, "real_date": "2011-06-21_10:04:07", "date": "5 months ago", "message": "What you could do is limit the fileids used. For example, in my code above, instead of\u00a0negids = movie_reviews.fileids('neg')\u00a0you could do\u00a0negids = movie_reviews.fileids('neg')[:850]. Then both pos &amp; neg have an equal number of files, and you can divide them up for training &amp; testing however you want.", "approved": true, "is_last_child": false, "author_is_founder": true, "can_reply": true, "likes": 0, "user_voted": null, "num_replies": 1, "down_voted": false, "is_first_child": true, "has_been_anonymized": false, "highlighted": false, "parent_post_id": 230967008, "depth": 1, "points": 0, "user_key": "japerk", "author_is_creator": true, "email": "", "killed": false, "is_realtime": false}}, "ordered_posts": [352740391, 352859673, 290790374, 290913021, 247460067, 247465141, 239172605, 239218093, 239309337, 240235733, 230967008, 231032574, 231303033, 175081652, 175095642, 175187636, 175190279, 134598383, 134601407, 130817298, 130819670, 100604692, 100632641, 101110020, 101888238, 102136835, 99473918, 99499268, 100250395, 65495558, 65627728, 55068608, 55073203, 55207362, 55218873, 55269923], "realtime_enabled": false, "ready": true, "mediaembed": [], "has_more_reactions": false, "realtime_paused": false, "integration": {"receiver_url": null, "hide_user_votes": false, "reply_position": false, "disqus_logo": false}, "highlighted": {}, "reactions_start": 0, "media_url": "http://mediacdn.disqus.com/1323717765", "users": {"yahoo-YU5KVC5PTJR22LOKDJIN32VMPU": {"username": "yahoo-YU5KVC5PTJR22LOKDJIN32VMPU", "tumblr": "", "about": "", "display_name": "gunzip", "url": "http://disqus.com/yahoo-YU5KVC5PTJR22LOKDJIN32VMPU/", "registered": true, "remote_id": "YU5KVC5PTJR22LOKDJIN32VMPU", "linkedin": "", "blog": "http://pulse.yahoo.com/_YU5KVC5PTJR22LOKDJIN32VMPU", "remote_domain": 5, "points": 1, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/379/5526/avatar32.jpg?1281549414", "delicious": "", "is_remote": true, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": "Yahoo!"}, "77acae5bba8c7daed0edfd50a8ec4523": {"username": "Dmitry Chaplinsky", "tumblr": "", "about": "", "display_name": "Dmitry Chaplinsky", "url": "http://disqus.com/guest/77acae5bba8c7daed0edfd50a8ec4523/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://hq-recovery.com", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "5262833ba7a07ec85942c283ad7fec8b": {"username": "Alex", "tumblr": "", "about": "", "display_name": "Alex", "url": "http://disqus.com/guest/5262833ba7a07ec85942c283ad7fec8b/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://media.disqus.com/uploads/anonusers/1636/1020/avatar32.jpg", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "f86a18e7f1b9ba5c069354d6eb10dd72": {"username": "Pulkit", "tumblr": "", "about": "", "display_name": "Pulkit", "url": "http://disqus.com/guest/f86a18e7f1b9ba5c069354d6eb10dd72/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "twitter-402640187": {"username": "twitter-402640187", "tumblr": "", "about": "", "display_name": "jorrit", "url": "http://disqus.com/twitter-402640187/", "registered": true, "remote_id": "402640187", "linkedin": "", "blog": "http://twitter.com/dieselboris", "remote_domain": 2, "points": 1, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/1857/7792/avatar32.jpg?1320148404", "delicious": "", "is_remote": true, "verified": false, "flickr": "", "twitter": "http://twitter.com/dieselboris", "remote_domain_name": "Twitter"}, "twitter-35175280": {"username": "twitter-35175280", "tumblr": "", "about": "", "display_name": "Aditya Herlambang", "url": "http://disqus.com/twitter-35175280/", "registered": true, "remote_id": "35175280", "linkedin": "", "blog": "http://twitter.com/aditya_herlamba", "remote_domain": 2, "points": 2, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/477/162/avatar32.jpg?1309755875", "delicious": "", "is_remote": true, "verified": false, "flickr": "", "twitter": "http://twitter.com/aditya_herlamba", "remote_domain_name": "Twitter"}, "japerk": {"username": "japerk", "tumblr": "", "about": "weotta.com", "display_name": "Jacob Perkins", "url": "http://disqus.com/japerk/", "registered": true, "remote_id": null, "linkedin": "", "blog": "http://streamhacker.com/", "remote_domain": "", "points": 10, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/223/1965/avatar32.jpg?1321851136", "delicious": "", "is_remote": false, "verified": true, "flickr": "", "twitter": "http://twitter.com/japerk", "remote_domain_name": ""}, "0eb375090884273ee1b70cf4eeb16d82": {"username": "Spin_maker", "tumblr": "", "about": "", "display_name": "Spin_maker", "url": "http://disqus.com/guest/0eb375090884273ee1b70cf4eeb16d82/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "3a649674f0e4ce2cd26cbb8cd6fee10c": {"username": "Heroes del Silencio", "tumblr": "", "about": "", "display_name": "Heroes del Silencio", "url": "http://disqus.com/guest/3a649674f0e4ce2cd26cbb8cd6fee10c/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "2b52a2f8b014195204d9a913ffbd833d": {"username": "Kellegher", "tumblr": "", "about": "", "display_name": "Kellegher", "url": "http://disqus.com/guest/2b52a2f8b014195204d9a913ffbd833d/", "registered": false, "remote_id": null, "linkedin": "", "blog": "", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}, "google-d8ace960f295f69136bdf17f547c96c0": {"username": "google-d8ace960f295f69136bdf17f547c96c0", "tumblr": "", "about": "", "display_name": "Ritvik Mathur", "url": "http://disqus.com/google-d8ace960f295f69136bdf17f547c96c0/", "registered": true, "remote_id": "d8ace960f295f69136bdf17f547c96c0", "linkedin": "", "blog": "", "remote_domain": 6, "points": 1, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/1376/9852/avatar32.jpg?1310351191", "delicious": "", "is_remote": true, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": "Google"}, "philgo20": {"username": "philgo20", "tumblr": "", "about": "Product Developer", "display_name": "philgo20", "url": "http://disqus.com/philgo20/", "registered": true, "remote_id": null, "linkedin": "in/philippegauvin", "blog": "http://philgo20.com/", "remote_domain": "", "points": 36, "facebook": "", "avatar": "http://mediacdn.disqus.com/uploads/users/38/5203/avatar32.jpg?1323746885", "delicious": "fhb418", "is_remote": false, "verified": true, "flickr": "", "twitter": "http://twitter.com/PhilGo20", "remote_domain_name": ""}, "691b6bcefccc5fb10af4f3efa791dff7": {"username": "Clement Levallois", "tumblr": "", "about": "", "display_name": "Clement Levallois", "url": "http://disqus.com/guest/691b6bcefccc5fb10af4f3efa791dff7/", "registered": false, "remote_id": null, "linkedin": "", "blog": "http://www.clementlevallois.net", "remote_domain": "", "points": null, "facebook": "", "avatar": "http://media.disqus.com/uploads/anonusers/1430/6069/avatar32.jpg", "delicious": "", "is_remote": false, "verified": false, "flickr": "", "twitter": "", "remote_domain_name": ""}}, "user_unapproved": {}, "messagesx": {"count": 0, "unread": []}, "thread": {"voters_count": 1, "offset_posts": 0, "slug": "text_classification_for_sentiment_analysis_8211_naive_bayes_classifier", "paginate": false, "num_pages": 1, "days_alive": 0, "moderate_none": false, "voters": {"imbenzene": {"url": "http://disqus.com/imbenzene/", "username": "imbenzene", "is_moderator": false, "avatar": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "name": "imbenzene"}}, "total_posts": 36, "realtime_paused": true, "queued": false, "pagination_type": "append", "user_vote": null, "likes": 2, "num_posts": 36, "closed": false, "per_page": 0, "id": 94082879, "killed": false, "moderate_all": false}, "forum": {"use_media": true, "avatar_size": 32, "apiKey": "YWCgLBoCmr5eDUCAL40yFa8p4BFNCovAtkhVglFWT9aaZK0hxDklardJQtsjR2IX", "features": {}, "use_old_templates": false, "comment_max_words": 0, "mobile_theme_disabled": false, "linkbacks_enabled": true, "is_early_adopter": false, "allow_anon_votes": true, "revert_new_login_flow": false, "stylesUrl": "http://mediacdn.disqus.com/uploads/styles/30/9285/streamhacker.css", "login_buttons_enabled": false, "streaming_realtime": false, "show_avatar": true, "reactions_enabled": true, "reply_position": false, "id": 309285, "name": "streamhacker", "language": "en", "mentions_enabled": true, "url": "streamhacker", "allow_anon_post": true, "disqus_auth_disabled": false, "thread_votes_disabled": false, "default_avatar_url": "http://mediacdn.disqus.com/1323717765/images/noavatar32.png", "ranks_enabled": false, "template": {"url": "http://mediacdn.disqus.com/1323717765/build/themes/dsq7884a9652e94555c70f96b6be63be216.js?6", "mobile": {"url": "http://mediacdn.disqus.com/1323717765/build/themes/newmobile.js", "css": "http://mediacdn.disqus.com/1323717765/build/themes/newmobile.css"}, "api": "1.1", "name": "Houdini", "css": "http://mediacdn.disqus.com/1323717765/build/themes/dsq7884a9652e94555c70f96b6be63be216.css?6"}, "hasCustomStyles": false, "max_depth": 0, "lastUpdate": "", "moderate_all": false}, "settings": {"realtimeHost": "qq.disqus.com", "uploads_url": "http://media.disqus.com/uploads", "ssl_media_url": "https://securecdn.disqus.com/1323717765", "realtime_url": "http://rt.disqus.com/forums/realtime-cached.js", "facebook_app_id": "52254943976", "minify_js": true, "recaptcha_public_key": "6LdKMrwSAAAAAPPLVhQE9LPRW4LUSZb810_iaa8u", "read_only": false, "facebook_api_key": "4aaa6c7038653ad2e4dbeba175a679ba", "realtimePort": "80", "debug": false, "disqus_url": "http://disqus.com", "media_url": "http://mediacdn.disqus.com/1323717765"}, "ranks": {}, "request": {"sort": "hot", "is_authenticated": false, "user_type": "anon", "subscribe_on_post": 0, "missing_perm": null, "user_id": null, "remote_domain_name": "", "remote_domain": "", "is_verified": false, "profile_url": "", "username": "", "is_global_moderator": false, "sharing": {}, "timestamp": "2011-12-13_09:23:09", "is_moderator": false, "ordered_unapproved_posts": [], "unapproved_posts": {}, "forum": "streamhacker", "is_initial_load": true, "display_username": "", "points": null, "has_email": false, "moderator_can_edit": false, "is_remote": false, "userkey": "", "page": 1}, "context": {"use_twitter_signin": true, "use_fb_connect": false, "show_reply": true, "active_switches": ["bespin", "community_icon", "embedapi", "google_auth", "mentions", "new_facebook_auth", "new_thread_create", "realtime_cached", "show_captcha_on_links", "ssl", "static_reply_frame", "static_styles", "statsd_created", "upload_media", "use_rs_paginator_60m"], "sigma_chance": 10, "use_google_signin": false, "switches": {"olark_admin_addons": true, "listactivity_replies": true, "es_index_threads": true, "use_master_for_api": true, "google_auth": true, "html_email": true, "statsd.timings": true, "community_icon": true, "show_captcha_on_links": true, "olark_admin_packages": true, "static_styles": true, "stats": true, "realtime": true, "realtime_cached": true, "statsd_created": true, "bespin": true, "olark_support": true, "olark_addons": true, "new_facebook_auth": true, "limit_get_posts_days_30d": true, "edits_to_spam": true, "new_thread_create": true, "use_impermium": true, "upload_media": true, "vip_read_slave": true, "embedapi": true, "ssl": true, "send_to_impermium": true, "theme_editor_disabled": true, "train_impermium": true, "listactivity_replies_30d": true, "moderate_ascending": true, "git_themes": true, "new_moderate": true, "use_rs_paginator_60m": true, "redis_threadcount": true, "mentions": true, "olark_install": true, "static_reply_frame": true}, "forum_facebook_key": "", "use_yahoo": true, "subscribed": false, "active_gargoyle_switches": ["edits_to_spam", "es_index_threads", "git_themes", "html_email", "limit_get_posts_days_30d", "listactivity_replies", "listactivity_replies_30d", "moderate_ascending", "new_moderate", "olark_addons", "olark_admin_addons", "olark_admin_packages", "olark_install", "olark_support", "realtime", "redis_threadcount", "send_to_impermium", "show_captcha_on_links", "stats", "statsd.timings", "theme_editor_disabled", "train_impermium", "use_impermium", "use_master_for_api", "vip_read_slave"], "realtime_speed": 15000, "use_openid": true}}; /* */
    /* */ cookieMessages = {"user_created": null, "post_has_profile": null, "post_twitter": null, "post_not_approved": null}; session = {"url": null, "name": null, "email": null}; /* */

    DISQUS.jsonData = jsonData;
    DISQUS.jsonData.cookie_messages = cookieMessages;
    DISQUS.jsonData.session = session;

    if (DISQUS.useSSL) {
        DISQUS.useSSL(DISQUS.jsonData.settings);
    }

    // The mappings below are for backwards compatibility--before we port all the code that
    // accesses jsonData.settings to DISQUS.settings

    var mappings = {
        debug:                'disqus.debug',
        minify_js:            'disqus.minified',
        read_only:            'disqus.readonly',
        recaptcha_public_key: 'disqus.recaptcha.key',
        facebook_app_id:      'disqus.facebook.appId',
        facebook_api_key:     'disqus.facebook.apiKey'
    };

    var urlMappings = {
        disqus_url:    'disqus.urls.main',
        media_url:     'disqus.urls.media',
        ssl_media_url: 'disqus.urls.sslMedia',
        realtime_url:  'disqus.urls.realtime',
        uploads_url:   'disqus.urls.uploads'
    };

    if (DISQUS.jsonData.context.switches.realtime_setting_change) {
        urlMappings.realtimeHost = 'realtime.host';
        urlMappings.realtimePort = 'realtime.port';
    }
    for (key in mappings) {
        if (mappings.hasOwnProperty(key)) {
            DISQUS.settings.set(mappings[key], DISQUS.jsonData.settings[key]);
        }
    }

    for (key in urlMappings) {
        if (urlMappings.hasOwnProperty(key)) {
            DISQUS.jsonData.settings[key] = DISQUS.settings.get(urlMappings[key]);
        }
    }
}());

DISQUS.jsonData.context.csrf_token = '21bc467119200cb06806902fa8e2f5b0';

DISQUS.jsonData.urls = {
    login: 'http://disqus.com/profile/login/',
    logout: 'http://disqus.com/logout/',
    upload_remove: 'http://streamhacker.disqus.com/thread/text_classification_for_sentiment_analysis_8211_naive_bayes_classifier/async_media_remove/',
    request_user_profile: 'http://disqus.com/AnonymousUser/',
    request_user_avatar: 'http://mediacdn.disqus.com/1323717765/images/noavatar92.png',
    verify_email: 'http://disqus.com/verify/',
    remote_settings: 'http://streamhacker.disqus.com/_auth/embed/remote_settings/',
    edit_profile_window: 'http://disqus.com/embed/profile/edit/',
    embed_thread: 'http://streamhacker.disqus.com/thread.js',
    embed_vote: 'http://streamhacker.disqus.com/vote.js',
    embed_thread_vote: 'http://streamhacker.disqus.com/thread_vote.js',
    embed_thread_share: 'http://streamhacker.disqus.com/thread_share.js',
    embed_queueurl: 'http://streamhacker.disqus.com/queueurl.js',
    embed_hidereaction: 'http://streamhacker.disqus.com/hidereaction.js',
    embed_more_reactions: 'http://streamhacker.disqus.com/more_reactions.js',
    embed_subscribe: 'http://streamhacker.disqus.com/subscribe.js',
    embed_highlight: 'http://streamhacker.disqus.com/highlight.js',
    embed_block: 'http://streamhacker.disqus.com/block.js',
    update_moderate_all: 'http://streamhacker.disqus.com/update_moderate_all.js',
    update_days_alive: 'http://streamhacker.disqus.com/update_days_alive.js',
    show_user_votes: 'http://streamhacker.disqus.com/show_user_votes.js',
    forum_view: 'http://streamhacker.disqus.com/text_classification_for_sentiment_analysis_8211_naive_bayes_classifier',
    cnn_saml_try: 'http://disqus.com/saml/cnn/try/',
    realtime: DISQUS.jsonData.settings.realtime_url,
    thread_view: 'http://streamhacker.disqus.com/thread/text_classification_for_sentiment_analysis_8211_naive_bayes_classifier/',
    twitter_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/twitter/begin/',
    yahoo_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/yahoo/begin/',
    openid_connect: DISQUS.jsonData.settings.disqus_url + '/_ax/openid/begin/',
    googleConnect: DISQUS.jsonData.settings.disqus_url + '/_ax/google/begin/',
    community: 'http://streamhacker.disqus.com/community.html',
    admin: 'http://streamhacker.disqus.com/admin/moderate/',
    moderate: 'http://streamhacker.disqus.com/admin/moderate/',
    moderate_threads: 'http://streamhacker.disqus.com/admin/moderate-threads/',
    settings: 'http://streamhacker.disqus.com/admin/settings/',
    unmerged_profiles: 'http://disqus.com/embed/profile/unmerged_profiles/',

    channels: {
        def:      'http://disqus.com/default.html', /* default channel */
        auth:     'https://disqus.com/embed/login.html',
        tweetbox: 'http://disqus.com/forums/integrations/twitter/tweetbox.html?f=streamhacker',
        edit:     'http://streamhacker.disqus.com/embed/editcomment.html'
    }
};


// 
//     
DISQUS.jsonData.urls.channels.reply = 'http://mediacdn.disqus.com/1323717765/build/system/reply.html';
DISQUS.jsonData.urls.channels.upload = 'http://mediacdn.disqus.com/1323717765/build/system/upload.html';
DISQUS.jsonData.urls.channels.sso = 'http://mediacdn.disqus.com/1323717765/build/system/sso.html';
DISQUS.jsonData.urls.channels.facebook = 'http://mediacdn.disqus.com/1323717765/build/system/facebook.html';
//     
// 